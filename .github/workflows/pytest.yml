name: Pytest

on:
  push:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  pytest-e2e:
    runs-on: ubuntu-latest
    name: python
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Setup Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Start Docker Compose services
        run: |
          cp .env.example .env
          docker compose up -d
          docker compose ps # Display the status of all containers

      - name: Log container output if database fails
        if: failure() # Only runs if the workflow fails
        run: |
          echo "Logging container output for debugging..."
          docker compose logs database # Replace 'db' with your database service name
          docker compose ps
          docker network inspect $(docker network ls -q) || true
          docker inspect $(docker ps -aq) || true

      # Run docker/wait-for-frost-and-init-db.sh
      - name: Wait for Frost and Init DB
        run: |
          echo "Running docker/wait-for-frost-and-init-db.sh..."
          bash docker/wait-for-frost-and-init-db.sh

      # Check if the index exists in the database
      - name: Check indices were added
        run: |
          echo "Checking if a given index 'idx_observations_datastream_id' exists in the database..."
          index_check=$(docker exec -t database psql -U sensorthings -d sensorthings -t -c "SELECT indexname FROM pg_indexes WHERE tablename = 'OBSERVATIONS' AND indexname = 'idx_observations_datastream_id';")

          # Log the query result for debugging
          echo "Query result: $index_check"

          # Trim any surrounding whitespace
          index_check=$(echo "$index_check" | xargs)

          # Check if the index is found
          if [ "$index_check" != "idx_observations_datastream_id" ]; then
            echo "Error: The index 'idx_observations_datastream_id' is missing! Output was: '$index_check'"
            exit 1
          else
            echo "Index 'idx_observations_datastream_id' found."
          fi

      - name: Run tests
        run: |
          cp .env.example .env
          uv run pytest -x

      - name: Stop Docker Compose services
        if: always()
        run: |
          docker compose down
